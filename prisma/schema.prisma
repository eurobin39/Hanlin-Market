// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  log      = ["query", "info", "warn", "error"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String?    @unique
  password   String?
  phone      String?    @unique
  github_id  String?    @unique
  avatar     String?
  createAt   DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  smsToken   smsToken[]
  product    Product[]
  chat_rooms ChatRoom[]
  messages   Message[]
}

model smsToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Product {
  id          Int        @id @default(autoincrement())
  title       String
  price       Float
  photo       String
  description String
  created_At  DateTime   @default(now())
  updated_At  DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  ChatRooms   ChatRoom[]
}

model ChatRoom {
  id         String    @id @default(cuid())
  users      User[]
  productId  Int
  product    Product   @relation(fields: [productId], references: [id])
  created_At DateTime  @default(now())
  updated_At DateTime  @updatedAt
  messages   Message[]
}

model Message {
  id         Int      @id @default(autoincrement())
  payload    String
  room       ChatRoom @relation(fields: [chatRoomId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  chatRoomId String
  created_At DateTime @default(now())
  updated_At DateTime @updatedAt
}
